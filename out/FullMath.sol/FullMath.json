{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fb3a28d3a2d9a58f50873787c097b0c3bf2653dea4bd88b936bc95e70ef33c464736f6c63430008170033","sourceMap":"354:5218:41:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;354:5218:41;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fb3a28d3a2d9a58f50873787c097b0c3bf2653dea4bd88b936bc95e70ef33c464736f6c63430008170033","sourceMap":"354:5218:41:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswapContracts/=lib/v3-core/contracts/\",\":@uniswapPeriphery/=lib/v3-periphery/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"src/libraries/FullMath.sol\":{\"keccak256\":\"0x3fa70bf7d04d560f625bc0f57a6ab786017f0295a5ba8270bd9aef18f38e5b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7ba512794d1b1a140f51fe404f6f294fc154484b31da9ba489cdec02b7aecf\",\"dweb:/ipfs/Qmaed4fwttsyj2Pbhay9YUfpFec1WNGf9yH2tBZb4qFaWD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswapContracts/=lib/v3-core/contracts/","@uniswapPeriphery/=lib/v3-periphery/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","v3-core/=lib/v3-core/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/FullMath.sol":"FullMath"},"evmVersion":"paris","libraries":{}},"sources":{"src/libraries/FullMath.sol":{"keccak256":"0x3fa70bf7d04d560f625bc0f57a6ab786017f0295a5ba8270bd9aef18f38e5b89","urls":["bzz-raw://fc7ba512794d1b1a140f51fe404f6f294fc154484b31da9ba489cdec02b7aecf","dweb:/ipfs/Qmaed4fwttsyj2Pbhay9YUfpFec1WNGf9yH2tBZb4qFaWD"],"license":"MIT"}},"version":1},"id":41}